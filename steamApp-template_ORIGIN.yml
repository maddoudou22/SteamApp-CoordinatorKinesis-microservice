AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Test de deploiement depuis Codepipeline

Parameters:
  aliasName:
    Description: "The name of the alias pointing on the last working version of the Lambda function"
    Type: 'String'
    Default: "dev"

  deploymentType:
    Description: "Modalite de deploiement pour la fonction"
    Type: 'String'
    Default: "AllAtOnce"

  fileTestInput:
    Description: "Fichier contenant le corps de la requete passee a la fonction Lambda pour son test"
    Type: 'String'
    Default: "test-input.json"

  fileTestExpected:
    Description: "Fichier contenant la chaine de ccaracteres attendue pour valider le test"
    Type: 'String'
    Default: "test-expectedResult.json"


Resources:

  ApiGatewayLambdaInvokePermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName:
        Fn::GetAtt:
          - "steamAppPipelineFunction"
          - "Arn"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub |-
        arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*

  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
            swagger: 2.0
            info:
              title: "steamApp-Pipeline-api"
            basePath: /Prod
            schemes:
            - https
            paths:
              "/":
                x-amazon-apigateway-any-method:
                  produces:
                  - application/json
                  responses:
                    '200':
                      description: 200 response
                      schema:
                        $ref: "#/definitions/Empty"
                  x-amazon-apigateway-integration:
                    responses:
                      default:
                        statusCode: 200
                    uri:
                      Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${steamAppPipelineFunction.Arn}:${aliasName}/invocations
                    passthroughBehavior: when_no_match
                    httpMethod: POST
                    type: aws
            definitions:
              Empty:
                type: object
                title: Empty Schema


  steamAppPipelineFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs8.10

      AutoPublishAlias: !Ref aliasName
      DeploymentPreference:
        Type: !Ref deploymentType
        Alarms:
         - !Ref LambdaErrorAlarm
        Hooks:
            PreTraffic: !Ref deploiementSteamAppPreTrafficHook

      Events:
        PostApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /
            Method: ANY

  deploiementSteamAppPreTrafficHook:
    Type: AWS::Serverless::Function
    Properties:
      Handler: deploiementSteamAppTrafficHook.handler
      Policies:
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "codedeploy:PutLifecycleEventHookExecutionStatus"
            Resource:
              !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "lambda:InvokeFunction"
            Resource: !Ref steamAppPipelineFunction.Version
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "cloudwatch:PutMetricAlarm"
            Resource: "*"
      Runtime: nodejs6.10
      FunctionName: 'CodeDeployHook_steamApp_preTrafficHook' #Pour creer un Hook, CodeDeploy cree automatiquement un role qui ne peut executer des fonctions de Hook dont le nom  commence par 'CodeDeployHook_*' uniquement
      DeploymentPreference:
        Enabled: false
      Environment:
        Variables:
          CurrentVersion: !Ref steamAppPipelineFunction.Version
          aliasName: !Ref aliasName
          fileTestInput: !Ref fileTestInput
          fileTestExpected: !Ref fileTestExpected
          cloudformationAlarm: !Ref LambdaErrorAlarm

  LambdaErrorAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
#      AlarmName: "deploiement-java-testNouvelleVersion"
#      AlarmDescription: "Alerte sur le nombre d'erreurs remontees par la nouvelle version deployee"
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: '60'
      EvaluationPeriods: '1'
      Threshold: '10'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: FunctionName
        Value: "TempName"

